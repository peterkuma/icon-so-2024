#!/usr/bin/env python3
'''Plot precipitation filter test results.

plot_precip_filter_test INPUT OUTPUT

Arguments:

  INPUT   Input directory - the output of precip_filter_test (CSV).
  OUTPUT  Output plot (PDF).
'''

import sys
import matplotlib.pyplot as plt
import matplotlib as mpl
import ds_format as ds
import numpy as np

mpl.rc('font', family='Open Sans')
mpl.rc('axes', linewidth=0.3)
#mpl.rc('axes', grid=True)
mpl.rc('lines', linewidth=1.2)
mpl.rc('xtick.major', width=0.3)
mpl.rc('ytick.major', width=0.3)
mpl.rc('legend', framealpha=1)
mpl.rc('legend', facecolor='#eeeeee')
mpl.rc('legend', edgecolor='none')
mpl.rc('legend', fancybox=False)
mpl.rc('legend', fontsize=8)
mpl.rc('grid', color='k')
mpl.rc('grid', alpha=0.2)
mpl.rc('grid', lw=0.1)

COLORS = ['#0084C8']

if __name__ == '__main__':
	if len(sys.argv) != 3:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	input_ = sys.argv[1]
	output = sys.argv[2]
	dd = ds.readdir(input_)
	x = None
	y = None
	n = 0
	for i, d in enumerate(dd):
		label = 'Voyage' if i == 0 else None
		plt.plot(d['threshold'], d['precip_frac']*100, lw=0.5, color='k', label=label)
		if len(d['precip_frac']) > 1:
			if y is None:
				x = d['threshold']
				y = d['precip_frac']
				n = 1
			else:
				y += d['precip_frac']
				n += 1
	y /= n
	plt.plot(x, y*100, lw=2, color=COLORS[0], label='Mean')
	plt.xlabel('Precipitation threshold (mm hr$^{-1}$)')
	plt.ylabel('Fraction of profiles with precipitation (%)')
	plt.title('Precipitation filter test')
	plt.xlim(0, max(x))
	plt.ylim(0, 100)
	plt.gca().set_xticks(np.arange(0, max(x) + 0.05, 0.05))
	plt.gca().set_yticks(np.arange(0, 110, 10))
	plt.gca().set_aspect(1/plt.gca().get_data_ratio())
	plt.legend()
	plt.savefig(output, bbox_inches='tight')
