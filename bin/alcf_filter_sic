#!/usr/bin/env python3
'''Create ALCF filter for equal sea ice conditions across observations and models.

Usage: alcf_filter_sic THRESHOLD SURF INPUT... OUTPUT

Arugments:

  THRESHOLD  Threshold for sea ice detection.
  SURF       Surface data from observations (NetCDF).
  INPUT      Input directory - the output of alcf model (NetCDF).
  OUTPUT     Output file (NetCDF).
'''

import sys
import os
import numpy as np
import ds_format as ds
import aquarius_time as aq

def mask_to_intervals(mask, time):
	ii = np.where(mask)[0]
	if len(ii) == 0:
		return []
	mask2 = np.diff(ii)	> 1
	jj = np.where(mask2)[0]
	intervals = []
	i1 = ii[0]
	for j in jj:
		i2 = ii[j]
		intervals += [[time[i1], time[i2]]]
		i1 = ii[j+1]
	intervals += [[time[i1], time[ii[-1]]]]
	return intervals

cache = {}

if __name__ == '__main__':
	if len(sys.argv) < 5:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	threshold = float(sys.argv[1])
	surf = sys.argv[2]
	input_ = sys.argv[3:-1]
	output = sys.argv[-1]

	d_surf = ds.read(surf)
	n = ds.dim(d_surf, 'time')
	mask = np.zeros(n, np.int8)

	for i, t in enumerate(d_surf['time']):
		date = aq.to_date(t)
		s = aq.to_iso(aq.from_date([date[0], date[1], date[2], date[3]]))
		file = s.replace(':', '') + '.nc'
		for dirname in input_:
			filename = os.path.join(dirname, file)
			if filename in cache:
				d = cache[filename]
			else:
				for k in list(cache.keys())[:-len(input_)]:
					del cache[k]
				#print('<- ' + filename)
				try: d = ds.read(filename, ['time', 'input_sic'])
				except OSError: continue
				cache[filename] = d
			j = np.argmin(np.abs(d['time'] - t))
			dt = d['time'][j] - t
			if dt*24 > 6: continue
			if (d_surf['sic'][i] > threshold) == \
			   (d['input_sic'][j] > threshold):
				mask[i] += 1

	mask = mask == len(input_)
	time_bnds = mask_to_intervals(mask, d_surf['time'])

	ds.write(output, {
		'time_bnds': time_bnds,
		'.': {
			'time_bnds': {
				'.dims': ['time', 'bnds'],
				'standard_name': 'time',
				'long_name': 'time bounds',
				'units': ds.drivers.netcdf.JD_UNITS,
				'calendar': ds.drivers.netcdf.JD_CALENDAR,
			},
		},
	})

	print('-> ' + output)
