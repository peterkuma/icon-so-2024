#!/bin/bash
set -x

model="icon_cy3"
model_years="2021 2022 2023 2024"
keep_vars="rlut rsdt rsut"
subsets="\
40S+_recalib_bsd_noprecip \
40S+_recalib_bsd_noprecip_cyc \
40S+_recalib_bsd_noprecip_nocyc \
40S+_recalib_bsd_noprecip_cyc_2r \
40S+_recalib_bsd_noprecip_nocyc_2r \
40S+_recalib_bsd_noprecip_lts_stable \
40S+_recalib_bsd_noprecip_lts_unstable \
40-55S_recalib_bsd_noprecip \
55S+_recalib_bsd_noprecip"

task="$1"

recalib () {
	local in="$1"
	local out="$2"
	mkdir -p "$out"
	parallel -t \
		alcf lidar default "$in" "$out" \
		cloud_threshold: 5e-6 \
		bsd: 5e-6 keep_vars: { $keep_vars } \
		:::: input/obs/sources/by_instrument/chm15k
	parallel -t \
		alcf lidar default "$in" "$out" \
		cloud_threshold: 5e-6 \
		bsd: 10e-6 \
		keep_vars: { $keep_vars } \
		:::: input/obs/sources/by_instrument/{cl51,ct25k}
}

run_alcf () {
	local model="$1"
	local in="$2"
	local out="$3"
	mkdir -p "$out"
	parallel -j 4 -u \
		alcf auto model "$model" cl51 "$in" "$out" \
		track: data/obs/track_hourly_40S+/{}.nc \
		--track_lon_180 \
		njobs: 4 \
		keep_vars: { $keep_vars } \
		:::: input/obs/sources/by_instrument/{cl51,ct25k}
	parallel -j 1 -u \
		alcf auto model "$model" cl51 "$in" "$out" \
		track: data/obs/track_hourly_40S+/{}.nc \
		--track_lon_180 \
		track_gap: 0 \
		njobs: 16 \
		keep_vars: { $keep_vars } \
		:::: input/obs/sources/by_instrument/ct25k_stations
	parallel -j 4 -u \
		alcf auto model "$model" chm15k "$in" "$out" \
		track: data/obs/track_hourly_40S+/{}.nc \
		--track_lon_180 \
		njobs: 4 \
		keep_vars: { $keep_vars } \
		:::: input/obs/sources/by_instrument/chm15k
}

filter () {
	local in="$1"
	local out="$2"
	mkdir -p "$(dirname "$out")"
	parallel -j1 -t \
		bin/alcf_filter "$in" data/obs/track_hourly_40S+/{}.nc -40 "$out" \
		:::: input/obs/sources/all
}

filter_lts () {
	local stab="$1"
	local in="$2"
	local out="$3"
	mkdir -p "$(dirname "$out")"
	parallel -j1 \
		bin/alcf_filter_lts_eis lts "$stab" 12 "$in" "$out" \
		:::: input/obs/sources/all
}

stats () {
	local in="$1"
	local out="$2"
	local filter_noprecip="$3"
	local filter="$4"
	mkdir -p "$(dirname "$out")"
	parallel -t \
		alcf stats "$in" "$out" \
		filter_include: { "$filter_noprecip" "$filter" } \
		keep_vars: { $keep_vars } \
		--debug \
		:::: input/obs/sources/all
}

stats_lat () {
	local in="$1"
	local out="$2"
	local filter_noprecip="$3"
	local lat1="$4"
	local lat2="$5"
	mkdir -p "$(dirname "$out")"
	parallel -t \
		alcf stats "$in" "$out" \
		filter_include: { "$filter_noprecip" } \
		lat_lim: { "$lat1" "$lat2" } \
		keep_vars: { $keep_vars } \
		--debug \
		:::: input/obs/sources/all
}

stats_all () {
	local in="$1"
	local out="$2"
	local filter_noprecip="$3"
	local filter_cyc="$4"
	local filter_nocyc="$5"
	local filter_cyc_2r="$6"
	local filter_nocyc_2r="$7"
	local filter_lts_stable="$8"
	local filter_lts_unstable="${9}"
	local year="${10}"
	local prefix=recalib_bsd_noprecip
	stats "$in" "$out/40S+_$prefix/$year/{}.nc" \
		"$filter_noprecip/{}.nc" ""
	stats "$in" "$out/40S+_${prefix}_cyc/$year/{}.nc" \
		"$filter_noprecip/{}.nc" "$filter_cyc/{}.nc" 
	stats "$in" "$out/40S+_${prefix}_nocyc/$year/{}.nc" \
		"$filter_noprecip/{}.nc" "$filter_nocyc/{}.nc" 
	stats "$in" "$out/40S+_${prefix}_cyc_2r/$year/{}.nc" \
		"$filter_noprecip/{}.nc" "$filter_cyc_2r/{}.nc"
	stats "$in" "$out/40S+_${prefix}_nocyc_2r/$year/{}.nc" \
		"$filter_noprecip/{}.nc" "$filter_nocyc_2r/{}.nc"
	stats "$in" "$out/40S+_${prefix}_lts_stable/$year/{}.nc" \
		"$filter_noprecip/{}.nc" "$filter_lts_stable/{}.nc"
	stats "$in" "$out/40S+_${prefix}_lts_unstable/$year/{}.nc" \
		"$filter_noprecip/{}.nc" "$filter_lts_unstable/{}.nc"
	stats_lat "$in" "$out/40-55S_$prefix/$year/{}.nc" \
		"$filter_noprecip/{}.nc" -55 -40
	stats_lat "$in" "$out/55S+_$prefix/$year/{}.nc" \
		"$filter_noprecip/{}.nc" -90 -55
}

stats_reanalysis () {
	local type_="$1"
	local prefix="data/$type_"
	local filter="$prefix/filter"
	stats_all \
		"$prefix/samples_recalib_bsd/{}/lidar" \
		"$prefix/stats" \
		"$filter/40S+_noprecip_thres0.1" \
		"data/obs/filter/cyc" \
		"data/obs/filter/nocyc" \
		"data/obs/filter/cyc_2r" \
		"data/obs/filter/nocyc_2r" \
		"$filter/lts_stable" \
		"$filter/lts_unstable"
}

rs () {
	local type_="$1"
	local in="$2"
	local out="$3"
	parallel \
		"mkdir -p $out/{}; bin/rs_profile $type_ data/obs/rs/locations/{}.csv $in/{} -40 $out/{}" \
		:::: input/obs/sources/rs
}

rs_rstool () {
	local in="$1"
	local out="$2"
	for src in $(cat input/obs/sources/rs); do
		mkdir -p "$out/$src"
		parallel "echo {}; rstool prof prof {} $out/$src/{/}" \
			::: "$in/$src/"*.nc
	done
}

rs_stats () {
	local in="$1"
	local filter="$2"
	local out="$3"
	local year="$4"
	for subset in cyc_2r nocyc_2r lts_stable lts_unstable; do
		mkdir -p "$out/40S+_$subset/$year"
		parallel \
			bin/rs_stats \
			"$in"/{} \
			"$filter/$subset/$year"/{}.nc \
			-90 -40 \
			"$out/40S+_$subset"/$year/{}.nc \
			:::: input/obs/sources/rs 
	done		
	mkdir -p "$out/40S+/$year"
	mkdir -p "$out/40-55S/$year"
	mkdir -p "$out/55S+/$year"
	parallel bin/rs_stats "$in"/{} -90 -40 "$out/40S+/$year"/{}.nc \
		:::: input/obs/sources/rs 
	parallel bin/rs_stats "$in"/{} -55 -40 "$out/40-55S/$year"/{}.nc \
		:::: input/obs/sources/rs 
	parallel bin/rs_stats "$in"/{} -90 -55 "$out/55S+/$year"/{}.nc \
		:::: input/obs/sources/rs 
}

calc_cyc_dist () {
	local in="$1"
	local out="$2"
	local y1="$3"
	local y2="$4"
	mkdir -p "$out"
	parallel \
		bin/calc_cyc_dist \
		"$in" \
		{} {} \
		"$out/{}.nc" \
		::: $(seq "$y1" "$y2")
}

calc_lts_dist () {
	local type_="$1"
	local in="$2"
	local out="$3"
	mkdir -p "$(dirname $out)"
	bin/calc_lts_dist "$type_" 12 "$in" "$out"
}

plot_cyc_dist () {
	local in="$1"
	local out="$2"
	mkdir -p "$(dirname $out)"
	for ext in pdf png; do
		bin/plot_geo_dist cyc "$in"/*.nc "$out.$ext"
	done
}

plot_stab_dist () {
	local in="$1"
	local out="$2"
	mkdir -p "$(dirname "$out")"
	for ext in pdf png; do
		bin/plot_geo_dist stab "$in" "$out.$ext"
	done
}

case "$task" in

#convert_track)
#	mkdir -p data/obs/track_hourly_40S+
#	parallel 'bin/convert_track2 default data/obs/track/{}.nc data/obs/track_hourly_40S+/{}.nc -90 -40' :::: input/obs/sources/all
#	bin/point_track 2016-04-03 2018-03-14 158.940000 -54.496800 data/obs/track_hourly_40S+/mcq16-18.nc
#	;;

surf)
	in=input/obs/surf
	out=data/obs/surf_
	mkdir -p "$out"
	#bin/surf_aa \
	#	"$in/AA15-16/"{v1,v2_fixed,v3_part_fixed}.csv \
	#	"$out/AA15-16.nc"
	#bin/surf_marcus "$in/MARCUS/"*.csv "$out/MARCUS.nc"
	#parallel \
	#	bin/surf_ps \
	#	1 \
	#	{} \
	#	"$in/PS/thermosalinograph/tab_wo_header/{/}" \
	#	"$out/{/.}.nc" \
	#	::: "$in/PS/metcont/tab_wo_header/"*.tab
	#parallel \
	#	bin/surf_ps \
	#	2 \
	#	{} \
	#	"$in/PS/thermosalinograph/tab_wo_header/{/.}.tab" \
	#	"$out/{/.}.nc" \
	#	::: "$in/PS/metcont_extra/"PS{124,81_8}.csv
	#parallel \
	#	bin/surf_tan "$out/{/}.nc" {} "$in/TAN/csv/{/}.csv" \
	#	::: "$in/TAN/nc/"{TAN1502,TAN1802}
	#parallel \
	#	bin/surf_tan "$out/{/}.nc" {} \
	#	::: "$in/TAN/nc/TAN1702"
	#bin/surf_nbp "$in/NBP1704.mat" "$out/NBP1704.nc"
	;;

plot_map)
	mkdir -p plot
	bin/plot_map
	;;

calc_cyc_dist_model)
	calc_cyc_dist "data/cyc/cytrack/$model.nc" "data/$model/cyc_dist_" 2021 2024
	;;

calc_cyc_dist_era5)
	calc_cyc_dist data/cyc/cytrack/era5.nc data/era5/cyc_dist 2010 2013
	;;

remap_lts_era5)
	for prod in surf plev; do
		mkdir -p "data/era5/lts_1x1deg_/$prod"
		parallel \
			cdo remapcon,r360x180 {} "data/era5/lts_1x1deg_/$prod/{/}" \
			::: "input/era5/lts/$prod/"*.nc
	done
	;;

calc_lts_dist_model)
	calc_lts_dist icon "input/$model/lts" "data/$model/lts_dist/2021-2024.nc"
	;;

calc_lts_dist_era5)
	calc_lts_dist era5 data/era5/lts_1x1deg data/era5/lts_dist_/2010-2013.nc
	;;

plot_cyc_dist_model)
	plot_cyc_dist \
		"data/$model/cyc_dist" \
		"plot/cyc_dist/${model}_2021-2024"
	;;

plot_cyc_dist_era5)
	plot_cyc_dist \
		data/era5/cyc_dist \
		"plot/cyc_dist/era5_2010-2013"
	;;

plot_stab_dist_model)
	plot_stab_dist \
		"data/$model/lts_dist/2021-2024.nc" \
		"plot/stab_dist/${model}_2021-2024"
	;;

plot_stab_dist_era5)
	plot_stab_dist \
		data/era5/lts_dist/2010-2013.nc \
		"plot/stab_dist/era5_2010-2013"
	;;

download_era5)
	mkdir -p input/era5
	parallel -t -j1 \
		'mkdir -p input/era5/{}; alcf download era5 track: data/obs/track_hourly_40S+/{}.nc input/era5/{}' \
		:::: input/obs/sources/all
	;;

download_merra2)
	mkdir -p input/merra2
	parallel -t -j1 \
		'mkdir -p input/merra2/{}; alcf download merra2 track: data/obs/track_hourly_40S+/{}.nc input/merra2/{}' \
		:::: input/obs/sources/all
	;;

alcf_merra2)
	run_alcf merra2 input/merra2/{} data/merra2/samples/{}
	;;

alcf_era5)
	run_alcf era5 input/era5/{} data/era5/samples/{}
	;;

recalib_obs)
	recalib \
		data/obs/samples/{}/lidar \
		data/obs/samples_recalib_bsd/{}/lidar
	;;

recalib_model)
	for year in $model_years; do
		recalib \
			"input/$model/$year/{}/lidar" \
			"data/$model/samples_recalib_bsd/$year/{}/lidar"
	done
	wait
	;;

recalib_merra2)
	recalib \
		data/merra2/samples/{}/lidar \
		data/merra2/samples/{}/lidar_recalib_bsd
	;;

recalib_era5)
	recalib \
		data/era5/samples/{}/lidar \
		data/era5/samples_recalib_bsd/{}/lidar
	;;

alcf_ceres)
	for src in $(cat input/obs/sources/all); do
		mkdir -p "data/obs/samples_recalib_bsd/$src/lidar"
		parallel \
			bin/alcf_ceres \
			{} \
			input/ceres/ \
			"data/obs/samples_recalib_bsd/$src/lidar/{/}" \
			::: "data/obs/samples_recalib_bsd/$src/lidar/"*.nc
	done
	;;

filter_model)
	for year in $model_years; do
		filter \
			"input/$model/$year/{}/model" \
			"data/$model/filter/40S+_noprecip_thres0.1/$year/{}.nc" &
	done
	wait
	;;

filter_merra2)
	filter \
		data/merra2/samples/{}/model \
		data/merra2/filter/40S+_noprecip_thres0.1/{}.nc
	;;

filter_era5)
	filter \
		data/era5/samples/{}/model \
		data/era5/filter/40S+_noprecip_thres0.1/{}.nc
	;;

filter_lts_model)
	for year in $model_years; do
		filter_lts stable \
			"input/$model/$year/{}/model" \
			"data/$model/filter/lts_stable/$year/{}.nc" &
		filter_lts unstable \
			"input/$model/$year/{}/model" \
			"data/$model/filter/lts_unstable/$year/{}.nc" &
	done
	wait
	;;

filter_lts_merra2)
	filter_lts stable \
		data/merra2/samples/{}/model \
		data/merra2/filter/lts_stable/{}.nc
	filter_lts unstable \
		data/merra2/samples/{}/model \
		data/merra2/filter/lts_unstable/{}.nc
	;;

filter_lts_era5)
	filter_lts stable \
		data/era5/samples/{}/model \
		data/era5/filter/lts_stable/{}.nc
	filter_lts unstable \
		data/era5/samples/{}/model \
		data/era5/filter/lts_unstable/{}.nc
	;;

stats_obs)
	stats_all \
		data/obs/samples_recalib_bsd/{}/lidar \
		data/obs/stats \
		data/obs/filter/40S+_noprecip \
		data/obs/filter/cyc \
		data/obs/filter/nocyc \
		data/obs/filter/cyc_2r \
		data/obs/filter/nocyc_2r \
		data/era5/filter/lts_stable \
		data/era5/filter/lts_unstable
	;;

stats_model)
	prefix="data/$model"
	filter="$prefix/filter"
	for year in $model_years; do
		stats_all \
			"$prefix/samples_recalib_bsd/$year/{}/lidar" \
			"$prefix/stats" \
			"$filter/40S+_noprecip_thres0.1/$year" \
			"$filter/cyc/$year" \
			"$filter/nocyc/$year" \
			"$filter/cyc_2r/$year" \
			"$filter/nocyc_2r/$year" \
			"$filter/lts_stable/$year" \
			"$filter/lts_unstable/$year" \
			"$year" &
	done
	wait
	;;

stats_merra2)
	stats_reanalysis merra2
	;;

stats_era5)
	stats_reanalysis era5
	;;

plot_cl_agg)
	mkdir -p plot/cl_agg
	for subset in $subsets; do
		bin/plot_cl_agg \
			"data/obs/stats/$subset" \
			"data/icon_cy3/stats/$subset" \
			"data/merra2/stats/$subset" \
			"data/era5/stats/$subset" \
			ICON MERRA-2 ERA5 \
			"plot/cl_agg/cy3_${subset}.pdf" &
	done
	wait
	;;

plot_clt_hist)
	mkdir -p plot/clt_hist
	for subset in $subsets; do
		bin/plot_clt_hist \
			"data/obs/stats/$subset" \
			"data/icon_cy3/stats/$subset" \
			"data/merra2/stats/$subset" \
			"data/era5/stats/$subset" \
			OBS ICON MERRA-2 ERA5 \
			"plot/clt_hist/cy3_${subset}.pdf" &
	done
	wait
	;;

rs_obs)
	# PS
	for src in $(cat input/obs/sources/by_platform/ps); do
		in="input/obs/rs/$src"
		out="data/obs/rs/profiles/$src"
		mkdir -p "$out"
		if [ -e "$in/tab_wo_header" ]; then
			parallel \
				bin/rs_ps_single \
				{} \
				"data/obs/track/$src.nc" \
				"$in/summary_wo_header.tab" \
				"$out/"{/.}.nc \
				::: "$in/tab_wo_header/"*.tab
		elif [ -e "$in"/*_radiosonde_wo_header.tab ]; then
			true
		else
			echo "$src: no radiosonde measurements found" >&2
		fi
	done
	parallel \
		'[ -e input/obs/rs/{}/*_radiosonde_wo_header.tab ] && bin/rs_ps_multi input/obs/rs/{}/*_radiosonde_wo_header.tab data/obs/rs/profiles/{}' \
		:::: input/obs/sources/by_platform/ps
	for src in $(cat input/obs/sources/by_platform/ps); do
		parallel \
			rstool prof prof {} "data/obs/surf/ps/$src.nc" {} \
			::: "data/obs/rs/profiles/$src"/*.nc
	done

	# TAN1702, TAN1802, and NBP1704
	declare -A input_type
	input_type[TAN1702]=imet
	input_type[TAN1802]=imet
	input_type[NBP1704]=prof
	for src in TAN1702 TAN1802 NBP1704; do
		mkdir -p "data/obs/rs/profiles/$src"
		parallel \
			rstool "${input_type[$src]}" prof \
			{} \
			"data/obs/surf/$src.nc" \
			"data/obs/rs/profiles/$src/"{/.}.nc \
			::: "input/obs/rs/$src/"*
	done

	# MARCUS
	mkdir -p data/obs/rs/profiles/MARCUS
	parallel \
		bin/rs_marcus {} data/obs/rs/profiles/MARCUS/{/} \
		::: input/obs/rs/MARCUS/*.nc
	parallel \
		rstool prof prof {} data/obs/surf/MARCUS.nc {} \
		::: data/obs/rs/profiles/MARCUS/*.nc
	;;

rs_model)
	for year in $model_years; do
		rs_rstool "input/$model/rs/$year" "data/icon_cy3/rs/profiles/$year" &
	done
	wait
	;;

rs_merra2)
	rs merra2 input/merra2/samples data/merra2/rs/profiles
	rs_rstool data/merra2/rs/profiles data/merra2/rs/profiles
	;;

rs_era5)
	rs era5 input/era5/samples data/era5/rs/profiles
	rs_rstool data/era5/rs/profiles data/era5/rs/profiles
	;;

rs_stats_obs)
	rs_stats data/obs/rs/profiles data/obs/filter data/obs/rs/stats
	;;

rs_stats_model)
	for year in $model_years; do
		rs_stats \
			"data/$model/rs/profiles/$year" \
			"data/$model/filter" \
			"data/$model/rs/stats" \
			"$year" &
	done
	wait
	;;

rs_stats_merra2)
	rs_stats data/merra2/rs/profiles data/merra2/filter data/merra2/rs/stats
	;;

rs_stats_era5)
	rs_stats data/era5/rs/profiles data/era5/filter data/era5/rs/stats
	;;

plot_rs_agg)
	for subset in \
		40S+ \
		40S+_cyc_2r \
		40S+_nocyc_2r \
		40S+_lts_stable \
		40S+_lts_unstable \
		40-55S \
		55S+
	do
		for type_ in theta_hur lcl; do
			mkdir -p "plot/rs_agg/$type_"
			bin/plot_rs_agg \
				"$type_" \
				"data/obs/rs/stats/$subset" \
				"data/icon_cy3/rs/stats/$subset/2021" \
				"data/merra2/rs/stats/$subset" \
				"data/era5/rs/stats/$subset" \
				OBS ICON MERRA-2 ERA5 \
				"plot/rs_agg/$type_/$subset.pdf"
		done
	done
	;;

*)
	echo "Invalid task \"$task\"" >&2
	;;

esac
